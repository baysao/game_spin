 # location /app/assets {
 #     alias _APP_ROOT_/public/assets;
 # }
 
 # location /app {
 #     access_log _SITE_ROOT_/logs/app_v1-access.log;
 #    error_log _SITE_ROOT_/logs/app_v1-error.log;

 #            default_type text/html;

 #            # NOTE: we should uncomment these when doing local benchmark
 #            # or stress tests:
 #            # limit_req zone=five burst=20;
 #            # limit_conn addr 20;

 #            content_by_lua_block {
 #                require("app").go()
 #            }
 #        }
	
location ~ ^/(node|app|gateway|test) {

    access_log _SITE_ROOT_/logs/app_v1-access.log;
    error_log _SITE_ROOT_/logs/app_v1-error.log;

    index index.html;
    root _APP_ROOT_/public;
}

location ~ ^/_(?<svr_type>(app|node|gateway))/config.json {
     access_log _SITE_ROOT_/logs/app_v1-access.log;
     error_log _SITE_ROOT_/logs/app_v1-error.log;

     default_type application/json;
     content_by_lua_block {
        require(ngx.var.svr_type).go()
     }
 }
    
location /api/app/v2 {
     content_by_lua_file '_APP_ROOT_/src/v2.lua';
}
location ~ ^/api/(app|node|gateway)/v1 {
    access_log _SITE_ROOT_/logs/app_v1-access.log;
    error_log _SITE_ROOT_/logs/app_v1-error.log;
    # allow 127.0.0.1;
    # deny all;
    set $app_root _APP_ROOT_;
    default_type application/json;
    limit_except OPTIONS POST GET {
        deny all;
    }
     proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
	    
    
    content_by_lua 'nginxBootstrap:runapp("_APP_ROOT_")';
}



        location /ssdb_string {
            default_type text/html;
            content_by_lua_file _APP_ROOT_/src/ssdb_string.lua;
        }

        location /ssdb_hash {
            default_type text/html;
            content_by_lua_file _APP_ROOT_/src/ssdb_hash.lua;
        }

        location /ssdb_sorted {
            default_type text/html;
            content_by_lua_file _APP_ROOT_/src/ssdb_sorted.lua;
        }